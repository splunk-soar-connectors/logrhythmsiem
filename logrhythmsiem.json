{
    "appid": "235e79d1-c56c-42ca-a860-c7f7ee07cc86", 
    "name": "LogRhythm SIEM", 
    "description": "This app supports ingestion and several investigative actions on LogRhythm SIEM", 
    "type": "siem", 
    "product_vendor": "LogRhythm", 
    "logo": "logrhythmsiem.png", 
    "product_name": "LogRhythm SIEM", 
    "product_version_regex": ".*", 
    "publisher": "Phantom", 
    "license": "Copyright (c) Phantom Cyber Corporation 2017", 
    "app_version": "1.0.0", 
    "utctime_updated": "2017-06-23T19:27:02.892841Z", 
    "package_name": "phantom_logrhythmsiem", 
    "main_module": "logrhythmsiem_connector.py", 
    "min_phantom_version": "2.1.486", 
    "app_wizard_version": "1.0.0", 
    "pip_dependencies": {
        "wheel": [
            {
                "module": "suds", "input_file": "wheels/suds-0.4-cp27-none-any.whl"
            }
        ]
    },
    "configuration": {
        "api_ip": {
            "description": "IP of API endpoint",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 0
        }, 
        "ph": {
            "data_type": "ph",
            "order": 1
        },
        "username": {
            "description": "Username",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 2
        }, 
        "password": {
            "description": "Password",
            "data_type": "password",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 3
        }, 
        "poll_now_ingestion_span": {
            "default": 15,
            "required": true,
            "data_type": "numeric",
            "description": "Poll last n days for 'Poll Now'",
            "order": 4
        },
        "first_scheduled_ingestion_span": {
            "default": 10,
            "required": true,
            "data_type": "numeric",
            "description": "Poll last n days for first scheduled polling",
            "order": 5
        },
        "max_alarms": {
            "default": 100,
            "required": true,
            "data_type": "numeric",
            "description": "Maximum number of alarms to ingest for scheduled polling",
            "order": 6
        }
    }, 
    "actions": [
        {
            "action": "test connectivity", 
            "identifier": "test_connectivity", 
            "description": "Validate the asset configuration for connectivity using supplied configuration.", 
            "verbose": "", 
            "type": "test", 
            "read_only": true, 
            "parameters": {}, 
            "output": [], 
            "versions": "EQ(*)"
        }, 
        {
            "action": "add to list", 
            "identifier": "add_to_list", 
            "description": "Add to a list", 
            "verbose": "Due to a limitation in the LogRhythm API, this action only supports adding to <b>General</b>, <b>User</b>, and <b>Host</b> lists. To add to a <b>Host</b> list. Specify the type of host to add, either <b>Hostname</b>, <b>IP</b>, or <b>IP Range</b>.", 
            "type": "generic", 
            "read_only": false, 
            "parameters": {
                "id": {
                    "description": "List ID",
                    "data_type": "numeric",
                    "required": true,
                    "primary": true,
                    "contains": [ "logrhythm list id" ],
                    "order": 0
                }, 
                "type": {
                    "description": "Type of list",
                    "data_type": "string",
                    "required": true,
                    "value_list": [ "General", "Hostname", "IP", "IP Range", "User" ],
                    "default": "General",
                    "order": 1
                },
                "element": {
                    "description": "Element to add to list",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "pattern_match": {
                    "description": "Pattern match",
                    "data_type": "boolean",
                    "required": true,
                    "order": 3
                }
            }, 
            "output": [
                {
                    "data_path": "action_result.parameter.id", 
                    "data_type": "string", 
                    "contains": [ "logrhythm list id" ], 
                    "column_name": "title", 
                    "column_order": 0
                }, 
                {
                    "data_path": "action_result.parameter.element", 
                    "data_type": "string", 
                    "column_name": "description", 
                    "column_order": 1
                }, 
                {
                    "data_path": "action_result.parameter.type", 
                    "data_type": "string", 
                    "column_name": "event_id", 
                    "column_order": 2
                }, 
                {
                    "data_path": "action_result.parameter.pattern_match", 
                    "data_type": "string", 
                    "column_name": "event_id", 
                    "column_order": 2
                }, 
                {
                    "data_path": "action_result.status", 
                    "data_type": "string", 
                    "column_name": "status", 
                    "column_order": 3
                }, 
                {
                    "data_path": "action_result.message", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "summary.total_objects", 
                    "data_type": "numeric"
                }, 
                {
                    "data_path": "summary.total_objects_successful", 
                    "data_type": "numeric"
                }
            ], 
            "render": {
                "type": "table"
            }, 
            "versions": "EQ(*)"
        }, 
        {
            "action": "run query",
            "identifier": "run_query",
            "description": "Search for a text in resources",
            "verbose": "The <b>query_dict</b> parameter takes a JSON dictionary with each key representing a field in an event to query. See the <b>LogQueryFilterTypeEnum</b> section of the <b>LogRhythmÂ® SOAP API Reference Guide</b> for a list of event fields that can be queried.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "from_date": {
                    "description": "Start Date (YYYY-MM-DDThh:mm:ss)",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "order": 0
                }, 
                "to_date": {
                    "description": "End Date (YYYY-MM-DDThh:mm:ss)",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "order": 1
                },
                "query_dict": {
                    "description": "Query Dictionary",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "order": 2
                },
                "max_events": {
                    "description": "Max Events to Query",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "order": 2
                }
            }, 
            "output": [
                {
                    "data_path": "action_result.parameter.max_events",
                    "data_type": "string"
                }, 
                {
                    "data_path": "action_result.parameter.query_dict", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "action_result.parameter.from_date", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "action_result.parameter.to_date",
                    "data_type": "string"
                }, 
                {
                    "data_path": "action_result.status", 
                    "data_type": "string", 
                    "column_name": "status", 
                    "column_order": 3
                }, 
                {
                    "data_path": "action_result.message", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "summary.total_objects", 
                    "data_type": "numeric"
                }, 
                {
                    "data_path": "summary.total_objects_successful", 
                    "data_type": "numeric"
                }
            ], 
            "render": {
                "type": "table"
            }, 
            "versions": "EQ(*)"
        }, 
        {
            "action": "on poll", 
            "identifier": "on_poll", 
            "description": "Callback action for the on_poll ingest functionality.", 
            "verbose": "", 
            "type": "ingest", 
            "read_only": true, 
            "parameters": {
                "container_id": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                }, 
                "start_time": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                }, 
                "end_time": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                }, 
                "container_count": {
                    "description": "Maximum number of container records to query for.", 
                    "data_type": "numeric"
                }, 
                "artifact_count": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                }
            }, 
            "output": [], 
            "versions": "EQ(*)"
        }, 
        {
            "action": "update alarm", 
            "identifier": "update_alarm", 
            "description": "Update an alarm", 
            "verbose": "", 
            "type": "generic", 
            "read_only": false, 
            "parameters": {
                "id": {
                    "description": "Alarm ID",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [ "logrhythm alarm id" ],
                    "order": 0
                }, 
                "status": {
                    "description": "New status for the alarm",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "value_list": [ "", "New", "Open", "Closed" ],
                    "order": 1
                },
                "comment": {
                    "description": "New comment to add to alarm",
                    "data_type": "string",
                    "required": false,
                    "primary": false,
                    "order": 2
                }
            }, 
            "output": [
                {
                    "data_path": "action_result.parameter.id", 
                    "data_type": "string",
                    "contains": [ "logrhythm alarm id" ]
                }, 
                {
                    "data_path": "action_result.parameter.status", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "action_result.parameter.comment", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "action_result.status", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "action_result.message", 
                    "data_type": "string"
                }, 
                {
                    "data_path": "summary.total_objects", 
                    "data_type": "numeric"
                }, 
                {
                    "data_path": "summary.total_objects_successful", 
                    "data_type": "numeric"
                }
            ], 
            "versions": "EQ(*)"
        }
    ]
}
